{"version":3,"sources":["../server/server.js"],"names":["require","Sacco","Rider","ObjectId","ObjectID","sourceMapSupport","install","express","bodyParser","app","qpm","mongodb","processQuery","autoDetect","fieldPattern","dataType","converters","objectId","use","json","get","req","res","post","body","insurance","issue_date","Date","newRider","save","then","rider","console","log","message","status","error","send","newSacco","sacco","err","find","ridersId","params","id","findById","_id","create","result","insertedId","addedRider","put","findByIdAndUpdate","updatedRider","findByIdAndRemove","exec","saccos","stack","saccoId","addedSacco","saccosId","updatedSacco","mongoose","connect","useNewUrlParser","listen"],"mappings":"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","sourcesContent":["import sourceMapSupport from 'source-map-support';\n// import queryString from 'query-String'\n// import { MongoClient } from 'mongodb';\nimport mongoose, { Schema } from 'mongoose';\n\n// mongoose models\n// eslint-disable-next-line import/extensions\n// import { Sacco, Rider } from './db.models';\n\n// eslint-disable-next-line import/order\nconst {Sacco, Rider} = require(\"./db.models\");\n\nrequire('babel-polyfill');\n\nconst ObjectId = require('mongodb').ObjectID;\n\nsourceMapSupport.install();\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\n// an instance of express\nconst app = express();\n\n// mounting other middlewares into our server.js\n// app.use(express.static('static'));\n\n\nconst qpm = require('query-params-mongo');\nconst mongodb = require('mongodb');\n\nconst processQuery = qpm({\n  autoDetect: [{ fieldPattern: /_id$/, dataType: 'objectId' }],\n  converters: { objectId: mongodb.ObjectID },\n});\n\n\napp.use(bodyParser.json());\n// OUR SERVER CODE WILL GO HERE\n\n// BASIC CRUD APIS\n\napp.get('/', (req, res) => {\n  res.json('this is our first server page');\n});\n\napp.post('/api/riders', (req, res) => {\n  if (req.body.insurance.issue_date) req.body.insurance.issue_date = new Date(req.body.insurance.issue_date);\n  const newRider = new Rider(req.body);\n  newRider.save()\n    .then((rider) => {\n      console.log({ message: 'The rider was added successfully' });\n      res.status(200).json({ rider });\n    })\n    .catch((error) => {\n      res.status(400).send({ message: `Unable to add the rider: ${error}` });\n    });\n});\n\napp.post('/api/saccos', (req, res) => {\n  console.log(req.body);\n  const newSacco = new Sacco(req.body);\n  // if (!new_sacco._id) new_sacco._id = Schema.Types.ObjectId;\n  newSacco.save()\n    .then((sacco) => {\n      console.log({ message: 'The sacco was added successfully' });\n      res.status(200).json({ sacco });\n    })\n    .catch((err) => {\n      res.status(400).send({ message: `Unable to add the sacco: ${err}` });\n    });\n});\n\n\n/* GET ALL RIDERS */\napp.get('/api/riders', (req, res) => {\n  Rider.find().then((rider) => {\n    if (!rider) res.status(404).json({ message: 'No avilable Riders in the system' });\n    else res.json(rider);\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* GET SINGLE RIDER BY ID */\napp.get('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  Rider.findById({ _id: ridersId }).then((rider) => {\n    if (!rider) res.status(404).json({ message: `No such Rider: ${ridersId}` });\n    else res.json(rider);\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* SAVE RIDERS */\napp.post('api/riders', (req, res) => {\n  const newRider = req.body;\n  Rider.create(newRider).then((result) => {\n    Rider.findById({ _id: result.insertedId }).then(((addedRider) => {\n      res.json(addedRider);\n    }));\n  }).catch((error) => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\n/* UPDATE PRODUCT */\napp.put('api/riders/:id', (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  const newRider = req.body;\n  Rider.findByIdAndUpdate({ _id: ridersId }, newRider).find({ _id: ridersId }).then((updatedRider) => {\n    res.json(updatedRider);\n  }).catch((err) => {\n    console.log(err);\n    res.status(500).json({ message: `Unable to update the riders information ${err}` });\n  });\n});\n\n\n/* DELETE PRODUCT */\napp.delete('/api/riders/:id', (req,res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: ridersId }, req.body).then((result) => {\n    res.json(result);\n  }).catch((err) => {\n    console.log({ message: `Unable to delelete the riders profile ${err}` });\n  });\n})\n// THIS IS THE SACCOS APIS\n// get all saccos\napp.get('/api/saccos', (req, res) => {\n  Sacco.find()\n    .exec()\n    .then((saccos) => {\n      res.status(200).json(saccos);\n    }).catch((err) => {\n      res.send(`Internal server error${err.stack}`).status(400);\n    });\n});\napp.get('/api/saccos/:id', (req, res) => { // parameter\n  let saccoId;\n  try {\n    saccoId = req.params.id;\n  } catch (error) {\n    res.json({ message: `Invalid sacco id ${error}` });\n  }\n\n  Sacco.findById({ _id: saccoId }).then((sacco) => {\n    res.json(sacco).status(200);\n  }).catch((err) => {\n    res.send(`Internal server error${err.stack}`).status(400);\n  });\n});\n\n// post api\napp.post('api/saccos', (req, res) => {\n  const newSacco = new Sacco(req.body);\n  newSacco.save().then((addedSacco) => {\n    // console.log(addedSacco);\n    res.status(200).json(addedSacco);\n  }).catch((error) => {\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.delete('api/saccos/:id', (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: saccosId }, req.body).then((result) => {\n    res.json(result);\n  }).catch((err) => {\n    console.log({ message: `Unable to delelete the saccos profile ${err}` });\n  });\n});\n\n\napp.put('api/saccos/:id', (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id ;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  const newSacco = req.body;\n\n  Sacco.findByIdAndUpdate({ _id: saccosId }, newSacco).find({ _id: saccosId }).then((updatedSacco) => {\n    res.json(updatedSacco);\n  }).catch((err) => {\n    console.log(err);\n    res.status(500).json({ message: `Unable to update the saccos information ${err}` });\n  });\n});\n\n\n// creating a connection to mongoose\n\nmongoose.connect('mongodb://127.0.0.1:27017/fika-safe', { useNewUrlParser: true })\n  .then(() => {\n    app.listen(3000, () => {\n      console.log('Listening on port 3000');\n    });\n}).catch(error => {\n    console.log({ message: 'Unable to est a connection to the server'});\n    \n})\n//   }).catch((error) => { res.statFailed to load resource: the server responded with a status of 404 (Not Found)\n//     us(400).send({ message: `Unable to add the rider: ${error}` });\n//     console.log({ message: `Unable to establish a connection to the server ${error}` });\n//   });"],"file":"server.js"}