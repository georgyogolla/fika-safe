{"version":3,"sources":["../server/server.js"],"names":["require","ObjectId","ObjectID","sourceMapSupport","install","express","bodyParser","app","qpm","mongodb","processQuery","autoDetect","fieldPattern","dataType","converters","objectId","use","json","get","req","res","post","body","insurance","issue_date","Date","newRider","Rider","save","then","rider","console","log","message","status","error","send","newSacco","Sacco","sacco","err","find","ridersId","params","id","findById","_id","create","result","insertedId","addedRider","put","findByIdAndUpdate","updatedRider","findByIdAndRemove","exec","saccos","stack","saccoId","addedSacco","saccosId","updatedSacco","mongoose","connect","useNewUrlParser","listen"],"mappings":"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","sourcesContent":["import sourceMapSupport from \"source-map-support\";\n// import queryString from 'query-String'\n// import { MongoClient } from 'mongodb';\nimport mongoose, { Schema } from \"mongoose\";\n\n// mongoose models\nimport { Sacco, Rider } from \"./db.models.js\";\n\nrequire(\"babel-polyfill\");\n\nconst ObjectId = require(\"mongodb\").ObjectID;\n\nsourceMapSupport.install();\n\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\n\n// an instance of express\nconst app = express();\n\n// mounting other middlewares into our server.js\n// app.use(express.static('static'));\n\nconst qpm = require(\"query-params-mongo\");\nconst mongodb = require(\"mongodb\");\n\nconst processQuery = qpm({\n  autoDetect: [{ fieldPattern: /_id$/, dataType: \"objectId\" }],\n  converters: { objectId: mongodb.ObjectID }\n});\n\napp.use(bodyParser.json());\n// OUR SERVER CODE WILL GO HERE\n\n// BASIC CRUD APIS\n\napp.get(\"/\", (req, res) => {\n  res.json(\"this is our first server page\");\n});\n\napp.post(\"/api/riders\", (req, res) => {\n  if (req.body.insurance.issue_date)\n    req.body.insurance.issue_date = new Date(req.body.insurance.issue_date);\n  const newRider = new Rider(req.body);\n  newRider\n    .save()\n    .then(rider => {\n      console.log({ message: \"The rider was added successfully\" });\n      res.status(200).json({ rider });\n    })\n    .catch(error => {\n      res.status(400).send({ message: `Unable to add the rider: ${error}` });\n    });\n});\n\napp.post(\"/api/saccos\", (req, res) => {\n  console.log(req.body);\n  const newSacco = new Sacco(req.body);\n  // if (!new_sacco._id) new_sacco._id = Schema.Types.ObjectId;\n  newSacco\n    .save()\n    .then(sacco => {\n      console.log({ message: \"The sacco was added successfully\" });\n      res.status(200).json({ sacco });\n    })\n    .catch(err => {\n      res.status(400).send({ message: `Unable to add the sacco: ${err}` });\n    });\n});\n\n/* GET ALL RIDERS */\napp.get(\"/api/riders\", (req, res) => {\n  Rider.find()\n    .then(rider => {\n      if (!rider)\n        res.status(404).json({ message: \"No avilable Riders in the system\" });\n      else res.json(rider);\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* GET SINGLE RIDER BY ID */\napp.get(\"api/riders/:id\", (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  Rider.findById({ _id: ridersId })\n    .then(rider => {\n      if (!rider)\n        res.status(404).json({ message: `No such Rider: ${ridersId}` });\n      else res.json(rider);\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* SAVE RIDERS */\napp.post(\"api/riders\", (req, res) => {\n  const newRider = req.body;\n  Rider.create(newRider)\n    .then(result => {\n      Rider.findById({ _id: result.insertedId }).then(addedRider => {\n        res.json(addedRider);\n      });\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\n/* UPDATE PRODUCT */\napp.put(\"api/riders/:id\", (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  const newRider = req.body;\n  Rider.findByIdAndUpdate({ _id: ridersId }, newRider)\n    .find({ _id: ridersId })\n    .then(updatedRider => {\n      res.json(updatedRider);\n    })\n    .catch(err => {\n      console.log(err);\n      res\n        .status(500)\n        .json({ message: `Unable to update the riders information ${err}` });\n    });\n});\n\n/* DELETE PRODUCT */\napp.delete(\"api/riders/:id\", (req, res) => {\n  let ridersId;\n  try {\n    ridersId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(400).send({ message: `Invalid riders ID:${ridersId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: ridersId }, req.body)\n    .then(result => {\n      res.json(result);\n    })\n    .catch(err => {\n      console.log({ message: `Unable to delelete the riders profile ${err}` });\n    });\n});\n// THIS IS THE SACCOS APIS\n// get all saccos\napp.get(\"/api/saccos\", (req, res) => {\n  Sacco.find()\n    .exec()\n    .then(saccos => {\n      res.status(200).json(saccos);\n    })\n    .catch(err => {\n      res.send(`Internal server error${err.stack}`).status(400);\n    });\n});\napp.get(\"/api/saccos/:id\", (req, res) => {\n  // parameter\n  let saccoId;\n  try {\n    saccoId = req.params.id;\n  } catch (error) {\n    res.json({ message: `Invalid sacco id ${error}` });\n  }\n\n  Sacco.findById({ _id: saccoId })\n    .then(sacco => {\n      res.json(sacco).status(200);\n    })\n    .catch(err => {\n      res.send(`Internal server error${err.stack}`).status(400);\n    });\n});\n\n// post api\napp.post(\"api/saccos\", (req, res) => {\n  const newSacco = new Sacco(req.body);\n  newSacco\n    .save()\n    .then(addedSacco => {\n      // console.log(addedSacco);\n      res.status(200).json(addedSacco);\n    })\n    .catch(error => {\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n});\n\napp.delete(\"api/saccos/:id\", (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  // THE REQ.BODY IS OPTIONAL INTHE FINDBYIDANREMOVE METHOD\n  Rider.findByIdAndRemove({ _id: saccosId }, req.body)\n    .then(result => {\n      res.json(result);\n    })\n    .catch(err => {\n      console.log({ message: `Unable to delelete the saccos profile ${err}` });\n    });\n});\n\napp.put(\"api/saccos/:id\", (req, res) => {\n  let saccosId;\n  try {\n    saccosId = req.params.id;\n  } catch (error) {\n    res.status(400).send({ message: `Invalid saccos ID:${saccosId}` });\n  }\n  const newSacco = req.body;\n\n  Sacco.findByIdAndUpdate({ _id: saccosId }, newSacco)\n    .find({ _id: saccosId })\n    .then(updatedSacco => {\n      res.json(updatedSacco);\n    })\n    .catch(err => {\n      console.log(err);\n      res\n        .status(500)\n        .json({ message: `Unable to update the saccos information ${err}` });\n    });\n});\n\n// creating a connection to mongoose\n\nmongoose\n  .connect(\"mongodb://127.0.0.1:27017/fika-safe\", { useNewUrlParser: true })\n  .then(() => {\n    app.listen(3000, () => {\n      console.log(\"Listening on port 3000\");\n    });\n  })\n  .catch(error => {\n    console.log({\n      message: `Unable to establish a connection to the server ${error}`\n    });\n  });\n"],"file":"server.js"}